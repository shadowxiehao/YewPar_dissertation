
@book{BK08,
  author    = {C. Baier and J.-P. Katoen},
  title     = {Principles of Model Checking},
  publisher = {MIT Press},
  year      = {2008},
  volume    = {},
  series    = {},
  address   = {},
  edition   = {},
  month     = {},
  note      = {},
  key       = {}
}

@inproceedings{10.1145/3332466.3374537,
  author    = {Archibald, Blair and Maier, Patrick and Stewart, Robert and Trinder, Phil},
  title     = {YewPar: Skeletons for Exact Combinatorial Search},
  year      = {2020},
  isbn      = {9781450368186},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/3332466.3374537},
  doi       = {10.1145/3332466.3374537},
  abstract  = {Combinatorial search is central to many applications, yet the huge irregular search trees and the need to respect search heuristics make it hard to parallelise. We aim to improve the reuse of intricate parallel search implementations by providing the first general purpose scalable parallel framework for exact combinatorial search, YewPar.We make the following contributions. (1) We present a novel formal model of parallel backtracking search, covering enumeration, decision, and optimisation search. (2) We introduce Lazy Node Generators as a uniform API for search tree generation. (3) We present the design and implementation of 12 widely applicable algorithmic skeletons for tree search on shared and distributed memory architectures. (4) Uniquely in the field we demonstrate how a wide range of parallel search applications can easily be constructed by composing Lazy Node Generators and the search skeletons. (5) We report a systematic performance analysis of all 12 YewPar skeletons on standard instances of 7 search applications, investigating skeleton overheads and scalability up to 255 workers on 17 distributed locations.},
  booktitle = {Proceedings of the 25th ACM SIGPLAN Symposium on Principles and Practice of Parallel Programming},
  pages     = {292â€“307},
  numpages  = {16},
  keywords  = {distributed memory parallelism, HPX, combinatorial search, algorithmic skeletons},
  location  = {San Diego, California},
  series    = {PPoPP '20}
}

@inproceedings{10.1145/2676870.2676883,
  author    = {Kaiser, Hartmut and Heller, Thomas and Adelstein-Lelbach, Bryce and Serio, Adrian and Fey, Dietmar},
  title     = {HPX: A Task Based Programming Model in a Global Address Space},
  year      = {2014},
  isbn      = {9781450332477},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/2676870.2676883},
  doi       = {10.1145/2676870.2676883},
  abstract  = {The significant increase in complexity of Exascale platforms due to energy-constrained, billion-way parallelism, with major changes to processor and memory architecture, requires new energy-efficient and resilient programming techniques that are portable across multiple future generations of machines. We believe that guaranteeing adequate scalability, programmability, performance portability, resilience, and energy efficiency requires a fundamentally new approach, combined with a transition path for existing scientific applications, to fully explore the rewards of todays and tomorrows systems. We present HPX -- a parallel runtime system which extends the C++11/14 standard to facilitate distributed operations, enable fine-grained constraint based parallelism, and support runtime adaptive resource management. This provides a widely accepted API enabling programmability, composability and performance portability of user applications. By employing a global address space, we seamlessly augment the standard to apply to a distributed case. We present HPX's architecture, design decisions, and results selected from a diverse set of application runs showing superior performance, scalability, and efficiency over conventional practice.},
  booktitle = {Proceedings of the 8th International Conference on Partitioned Global Address Space Programming Models},
  articleno = {6},
  numpages  = {11},
  keywords  = {High Performance Computing, Global Address Space, Exascale, Programming Models, Parallel Runtime Systems},
  location  = {Eugene, OR, USA},
  series    = {PGAS '14}
}